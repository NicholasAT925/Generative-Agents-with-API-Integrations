openapi: 3.0.0
info:
  title: Simple Pets API
  version: 1.0.0
servers:
  - url: 'https://cymshops-availability-1006343367991.us-east1.run.app'
paths:
 /:
   post:
     summary: Check availability by day
     requestBody:
       required: true
       content:
         application/json:
           schema:
             type: object
             properties:
               day:
                 type: string
             required:
               - day
     responses:
       '200':
         description: Successful response
         content:
           application/json:
             schema:
               type: object
               properties:
                 day:
                   type: string
                 available_slots:
                   type: array
                   items:
                     type: string
# paths:
#   /pets:
#     get:
#       summary: List all pets
#       operationId: listPets
#       responses:
#         '200':
#           description: An array of pets
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/Pet'
#     post:
#       summary: Create a new pet
#       operationId: createPet
#       requestBody:
#         description: Pet to add to the store
#         required: true
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/Pet'
#       responses:
#         '201':
#           description: Pet created
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Pet'
# components:
#   schemas:
#     Pet:
#       type: object
#       required:
#         - id
#         - name
#       properties:
#         id:
#           type: integer
#           format: int64
#         name:
#           type: string


#### FOR REFERENCE #### 

openapi: 3.0.0
info:
  title: Simple Pets API
  version: 1.0.0
servers:
  - url: 'https://api.pet-service-example.com/v1'
paths:
  /pets/{petId}:
    get:
      summary: Return a pet by ID.
      operationId: getPet
      parameters:
        - in: path
          name: petId
          required: true
          description: Pet id
          schema:
            type: integer
      responses:
        200:
          description: OK
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      parameters:
        - name: petName
          in: query
          required: false
          description: Pet name
          schema:
            type: string
        - name: label
          in: query
          description: Pet label
          style: form
          explode: true
          required: false
          schema:
            type: array
            items:
              type: string
        - name: X-OWNER
          in: header
          description: Optional pet owner provided in the HTTP header
          required: false
          schema:
            type: string
        - name: X-SESSION
          in: header
          description: Dialogflow session id
          required: false
          schema:
            $ref: "@dialogflow/sessionId"
      responses:
        '200':
          description: An array of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      summary: Create a new pet
      operationId: createPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '201':
          description: Pet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        owner:
          type: string
        label:
          type: array
          items:
            type: string